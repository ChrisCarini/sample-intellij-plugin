import java.util.stream.Collectors
import org.jetbrains.changelog.ExtensionsKt
import org.jetbrains.intellij.tasks.RunPluginVerifierTask.FailureLevel

String properties(String key) { return project.findProperty(key).toString() }

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.2.0'
    id 'org.jetbrains.changelog' version '1.3.0'
}

apply plugin: 'org.jetbrains.changelog'

group properties("pluginGroup")
version properties("pluginVersion")


repositories {
    mavenCentral()
}

intellij {
    pluginName.set(properties("pluginName"))
    version.set(properties("platformVersion"))
    type.set(properties("platformType"))
    downloadSources.set(properties("platformDownloadSources").toBoolean())

    // Plugin Dependencies. Uses `platformPlugins` property from the gradle.properties file.
    plugins.set(properties("platformPlugins").length() == 0 ? [] : Arrays.asList(properties("platformPlugins").split(',')))

    // TODO (https://youtrack.jetbrains.com/issue/IDEA-252693) - Disabled this task because it was failing. See my
    //      comment on the above YouTrack issue, and thread here: https://jetbrains-platform.slack.com/archives/C5U8BM1MK/p1604722479347300?thread_ts=1602338567.267100&cid=C5U8BM1MK
    // Note: This gradle task is only needed if `SearchableConfigurable` is used,
    //       not `Configurable`.
    //       See the following comment for details: https://jetbrains-platform.slack.com/archives/C5U8BM1MK/p1606813009234800?thread_ts=1606794793.231900&cid=C5U8BM1MK
    buildSearchableOptions.enabled = false
}

changelog {
    version = properties("pluginVersion")
    header = "[${-> version.get()}] - ${new Date().format('yyyy-MM-dd')}"
}

tasks {
    sourceCompatibility = properties("javaVersion")
    targetCompatibility = properties("javaVersion")

    wrapper {
        gradleVersion = properties("gradleVersion")
    }

    patchPluginXml {
        version.set(properties("pluginVersion"))

        // Extract the <!-- Plugin description --> section from README.md and provide for the plugin's manifest
        pluginDescription.set(
                ExtensionsKt.markdownToHTML(
                        project.file("README.md").text.lines()
                                .dropWhile({ String sx -> !sx.equals("<!-- Plugin description -->") })
                                .skip(1)
                                .takeWhile({ String sx -> !sx.equals("<!-- Plugin description end -->") })
                                .collect(Collectors.joining('\n'))
                )
        )

        def changeLogForVersion = changelog.getOrNull(properties("pluginVersion"))
        changeNotes.set((changeLogForVersion != null ? changeLogForVersion : changelog.getLatest()).toHTML())
    }

    runPluginVerifier {
        ideVersions = Arrays.asList(properties("pluginVerifierIdeVersions").split(','))
        failureLevel = [FailureLevel.NOT_DYNAMIC]
    }

    // Set the respective compiler arguments to fail the build if there are warnings.
    tasks.withType(JavaCompile) {
        options.compilerArgs.addAll([
                '-Xlint:all',
                '-Xlint:-options',
                '-Xlint:-rawtypes',
                '-Xlint:-processing',
                '-Xlint:-path', // Ignore JBR SDK manifest element warnings
                '-proc:none',
                '-Werror',
                '-Xlint:-classfile'
        ]) //ignore warnings from dependencies
    }

    // NOTE: This plugin is not published to the marketplace!!! You won't be able to publish it!!
    if (System.getenv('IS_CI') != "True") {
        // The below file (jetbrainsCredentials.gradle) should contain the below:
        //    project.ext.set("intellijPublishUsername", "YOUR_USERNAME_HERE")
        //    project.ext.set("intellijPublishPassword", "YOUR_PASSWORD_HERE")
        //    project.ext.set("intellijPluginPublishToken", "YOUR_TOKEN_HERE")
        //
        // Because this contains the username and password, this file is also included in .gitignore file.
        apply from: 'jetbrainsCredentials.gradle'

        publishPlugin {
            dependsOn("patchChangelog")
            //username.set(intellijPublishUsername)
            //password.set(intellijPublishPassword)
            token.set(intellijPluginPublishToken)
        }

        task checkJetBrainsCreds {
            doLast {
                println "Username: " + intellijPublishUsername
                println "Password " + (project.hasProperty('intellijPublishPassword') ? "IS" : "is NOT") + " set."
            }
        }
    }
}

test {
    useTestNG()
    useJUnit()
}

dependencies {
    testCompile 'org.testng:testng:6.1.1'
    testCompile "org.mockito:mockito-core:2.18.0"
}